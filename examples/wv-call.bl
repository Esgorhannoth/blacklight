;; basic demonstration of nested calls
.
  ..
    0
  .. call
. call
print

;; Smalltalk-style Conditionals

o-new      ;; o1 will house our truthy and falsey objects

o-new      ;; o2 (truthy object)
. swap call .   ;; evaluate the wv
if-true:   ;; store function in slot
. swap drop .   ;; do nothing except get rid of the wv
if-false:  ;; store function in slot
true:      ;; store o2 in slot in o1

o-new      ;; o3 (falsy object)
. swap drop .   ;; do nothing except get rid of the wv
if-true:   ;; store function in slot
. swap call .   ;; evaluate the wv
if-false:  ;; store function in slot
false:     ;; store o3 in slot in o1

:false                      ;; summon reference to falsey o3
. 'I am so false.' print .  ;; a WV to demonstrate the condition
swap :if-false              ;; call if-false on o3, will display "I am so false."
